name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-quality:
    name: Code Quality & Linting
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Validate commit messages
        if: github.event_name == 'pull_request'
        run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

  unit-tests:
    name: Unit Tests (Jest)
    runs-on: ubuntu-latest
    needs: lint-and-quality
    
    strategy:
      matrix:
        node-version: ['20.x']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create reports directory
        run: mkdir -p reports/jest

      - name: Run Jest unit tests
        run: npm run test:unit

      - name: Upload Jest reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: jest-reports-${{ matrix.node-version }}
          path: |
            reports/jest/
            coverage/
          retention-days: 30

  e2e-tests:
    name: E2E Tests (Cucumber + Selenium)
    runs-on: ubuntu-latest
    needs: lint-and-quality
    
    strategy:
      matrix:
        browser: ['chrome']
        test-suite: ['smoke', 'regression']
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Setup Chrome
        uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: stable

      - name: Setup ChromeDriver
        uses: nanasess/setup-chromedriver@v2

      - name: Create reports directories
        run: |
          mkdir -p reports/cucumber
          mkdir -p reports/screenshots

      - name: Create .env file
        run: |
          echo "BASE_URL=https://gadget-shop-complete-xf3n.bolt.host" >> .env
          echo "BROWSER=chrome" >> .env
          echo "HEADLESS=true" >> .env
          echo "DEFAULT_TIMEOUT=30000" >> .env

      - name: Run E2E tests - ${{ matrix.test-suite }}
        run: npm run test:e2e:${{ matrix.test-suite }}
        continue-on-error: true

      - name: Generate Cucumber HTML report
        if: always()
        run: npm run report:cucumber
        continue-on-error: true

      - name: Upload E2E test reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: e2e-reports-${{ matrix.browser }}-${{ matrix.test-suite }}
          path: |
            reports/cucumber/
            reports/screenshots/
          retention-days: 30

      - name: Upload screenshots on failure
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: failure-screenshots-${{ matrix.browser }}-${{ matrix.test-suite }}
          path: reports/screenshots/
          retention-days: 30

  build-summary:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: [lint-and-quality, unit-tests, e2e-tests]
    if: always()
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create build summary
        run: |
          echo "# 🚀 Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📊 Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Component | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|-----------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Code Quality & Linting | ${{ needs.lint-and-quality.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Unit Tests (Jest) | ${{ needs.unit-tests.result == 'success' && '✅ Passed' || '❌ Failed' }} |" >> $GITHUB_STEP_SUMMARY
          echo "| E2E Tests (Cucumber) | ${{ needs.e2e-tests.result == 'success' && '✅ Passed' || '⚠️ Check Results' }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📁 Available Artifacts" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- 📊 Jest HTML Reports" >> $GITHUB_STEP_SUMMARY
          echo "- 🥒 Cucumber HTML Reports" >> $GITHUB_STEP_SUMMARY
          echo "- 📸 Screenshots (on failures)" >> $GITHUB_STEP_SUMMARY
          echo "- 📈 Coverage Reports" >> $GITHUB_STEP_SUMMARY

      - name: List artifacts
        run: |
          echo "## 📦 Artifact Details" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          find artifacts -type f -name "*.html" -o -name "*.json" | head -20 >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
